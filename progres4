//FUZZY LIBRARY
#include <Fuzzy.h>
//HARDWARE LIBRARY
#include <OneWire.h>
#include <DallasTemperature.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
//FIREBASE LIBRARY
#include <Arduino.h>
#if defined (ESP32)
  #include <WiFi.h>
#elif defined (ESP8266)
  #include <ESP8266WiFi.h>
#endif
#include <Firebase_ESP_Client.h>
#include "addons/TokenHelper.h"
#include "addons/RTDBHelper.h"

//WIFI SETTING
#define WIFI_SSID ""
#define WIFI_PASS ""
//FIREBASE SETTING
#define API_KEY ""
#define DATABASE_URL ""

FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;
unsigned long sendDataPrevMillis = 0;

//SETTING TYPE DATA
float dht11;
float temperature;
bool signupOK = false;

//PIN SETTING
const int ds18b20Pin = D2; //PIN SENSOR SUHU
const int driverPin = D1; //PIN MOTOR DRIVER
#define SDA D5 //PIN LCD
#define SCL D6 //PIN LCD

OneWire oneWire(ds18b20Pin);
DallasTemperature sensors(&oneWire);
LiquidCrystal_I2C lcd(0x27, 16, 2);

byte simbolderajat[8] = {
  B00110,
  B01001,
  B01001,
  B00110,
  B00000,
  B00000,
  B00000,
  B00000
};

//FUZZY
Fuzzy*fuzzy = new Fuzzy();
//INPUT 1 DS18B20
FuzzySet*AirDingin = new FuzzySet(15, 18, 21, 24); 
FuzzySet*AirNormal = new FuzzySet(22, 25, 28, 31); 
FuzzySet*AirPanas = new FuzzySet(29, 32, 35, 38); 

//INPUT 2 DHT11
FuzzySet*UdaraDingin = new FuzzySet(0, 7, 14, 21); 
FuzzySet*UdaraNormal = new FuzzySet(20, 24, 28, 32); 
FuzzySet*UdaraPanas = new FuzzySet(31, 38, 45, 52); 

//OUTPUT 1 PWM
FuzzySet*Redup = new FuzzySet(0, 25, 50, 85); 
FuzzySet*Remang = new FuzzySet(86, 111, 136, 170); 
FuzzySet*Terang = new FuzzySet(171, 196, 221, 255);


void setup() {
  Serial.begin(9600);
  WiFi.begin(WIFI_SSID, WIFI_PASS);
  Serial.print("Menyambungkan WiFi");
  while (WiFi.status() !=WL_CONNECTED){
    Serial.print(".");
    delay(300);
  }
  Serial.println();
  Serial.print("Menyambungkan IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  //FIREBASE
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;
  if (Firebase.signUp(&config, &auth, "", "")) {
    Serial.println("ok");
    signupOK = true;
  }else{
    Serial.printf("%s\n", config.signer.signupError.message.c_str());
  }
  config.token_status_callback = tokenStatusCallback; //Cek addons/TokenHelper.h
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  //HARDWARE
  Serial.begin(115200);
  sensors.begin();
  pinMode(driverPin, OUTPUT);
  Wire.begin(SDA, SCL);
  lcd.begin();
  lcd.createChar (0, simbolderajat);

  //INPUT 1 DS18B20
  FuzzyInput*analog1 = new FuzzyInput(1);
  analog1->addFuzzySet(AirDingin);
  analog1->addFuzzySet(AirNormal);
  analog1->addFuzzySet(AirPanas);
  fuzzy->addFuzzyInput(analog1);

  //INPUT 2 DHT11
  FuzzyInput*analog2 = new FuzzyInput(2);
  analog2->addFuzzySet(UdaraDingin);
  analog2->addFuzzySet(UdaraNormal);
  analog2->addFuzzySet(UdaraPanas);
  fuzzy->addFuzzyInput(analog2);

  //OUTPUT 1 PWM
  FuzzyOutput*digital1 = new FuzzyOutput(1);
  digital1->addFuzzySet(Redup);
  digital1->addFuzzySet(Remang);
  digital1->addFuzzySet(Terang);
  fuzzy->addFuzzyOutput(digital1);

  //RULE 1 IF UdaraPanas AND AirPanas THEN Redup
  //RULE 2 IF UdaraPanas AND AirNormal THEN Remang
  //RULE 3 IF UdaraPanas AND AirDingin THEN Terang
  //RULE 4 IF UdaraNormal AND AirPanas THEN Redup
  //RULE 5 IF UdaraNormal AND AirNormal THEN Remang
  //RULE 6 IF UdaraNormal AND AirDigin THEN Terang
  //RULE 7 IF UdaraDingin AND AirPanas THEN Remang
  //RULE 8 IF UdaraDingin AND AirNormal THEN Terang
  //RULE 9 IF UdaraDingin AND AirDingin THEN Terang
}

void loop() {
  if (Firebase.ready() && signupOK && (millis() - sendDataPrevMillis > 1500 || sendDataPrevMillis == 0)){
    sendDataPrevMillis = millis();
    if (Firebase.RTDB.getFloat(&fbdo, "DHT11")){
      dht11 = fbdo.floatData();
      Serial.print("Suhu Udara: ");
      Serial.print(dht11);
      Serial.print(" Â°C | ");
    }
  }else{
    Serial.println(fbdo.errorReason());
  }

  sensors.requestTemperatures();
  float temperature = sensors.getTempCByIndex(0);
  Serial.print("Suhu Air: ");
  Serial.println(temperature);

  //LCD
  lcd.setCursor(0,0);
}
